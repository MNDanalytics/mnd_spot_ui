{"version":3,"sources":["assets/MND.cz.svg","components/StyledComponents/_Header.js","components/Header/Header.js","data/state.js","helpers/helpers.js","components/StyledComponents/_Dialog.js","components/Dialog/Dialog.js","components/StyledComponents/_InfoTask.js","components/Helper/InfoTask.js","data/input_data_modal.js","components/StyledComponents/_Modal.js","data/options_data.js","containers/Modal/Modal.js","components/StyledComponents/_Row.js","containers/Row/Row.js","components/StyledComponents/_Body.js","components/Main/Body.js","containers/Main/Content.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","BlockUp","styled","header","_templateObject","BlockImg","div","_templateObject2","Logo","img","attrs","alt","_templateObject3","BlockTitle","_templateObject4","Title","h1","_templateObject5","Header","react_default","a","createElement","src","logo","rows","id","hour","disabled","tasks","findByHour","arguments","length","undefined","find","item","toNumHour","Number","slice","DialogWrapper","_Dialog_templateObject","BtnClose","button","_Dialog_templateObject2","DialogBlock","_Dialog_templateObject3","Dialog","_ref","response_text","response","handleDialog","style","color","fontWeight","onClick","HelperTask","_InfoTask_templateObject","Col6","_InfoTask_templateObject2","TextVal","span","_InfoTask_templateObject3","InfoTask","_ref$show_info","show_info","TYPE","MINUTE","QUANTITY","VALIDITY","PEAK_PRICE_DELTA","DISPLAY_QUANTITY","react","input_data","type","value","max_value","min_value","step","name","input_data_ice","BottomSave","_Modal_templateObject","BottomClose","_Modal_templateObject2","BlockBottom","_Modal_templateObject3","DisplayVal","_Modal_templateObject4","Input","input","_Modal_templateObject5","_templateObject6","RowModal","_templateObject7","ModalData","_templateObject8","ModalTitle","_templateObject9","OnCloseModal","_templateObject10","HeaderModal","_templateObject11","OverlayModal","_templateObject12","props","isOpen","BodyModal","_templateObject13","options","label","Modal","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentWillUnmount","document","body","removeChild","root","handleInput","key","target","values","objectSpread","state","data","setState","saveData","_this$props","closeModal","addTaskToRow","HOUR","console","log","handleOption","option","renderInputRows","map","_ref2","index","_Modal_Col6","min","max","onChange","e","concat","appendChild","ID","uniq_id","_this2","_this$props2","ReactDOM","createPortal","width","backgroundColor","react_select_esm","autoFocus","isSearchable","placeholder","Component","BtnAdd","_Row_templateObject","BlockButton","_Row_templateObject2","BtnDelTask","_Row_templateObject3","WrapTask","_Row_templateObject4","Task","_Row_templateObject5","BlockTasks","_Row_templateObject6","active","Label","_Row_templateObject7","_Row_templateObject8","BlockCheck","_Row_templateObject9","BlockHour","_Row_templateObject10","BlockRow","_Row_templateObject11","Row","isOpenModal","taskHelperId","toggleModalView","renderTasks","delTask","showInfo","onMouseEnter","showHelper","onMouseLeave","hideHelper","renderModal","containers_Modal_Modal","_this$props3","checkActive","_Row_Input","checked","htmlFor","InsideBlock","_Body_templateObject","BlockWrapper","_Body_templateObject2","WrapBtn","_Body_templateObject3","_Body_templateObject4","_Body_templateObject5","Submit","_Body_templateObject6","Wrapper","_Body_templateObject7","_Body_templateObject8","children","Content","success","handleCheckRow","toConsumableArray","row","push","removeTaskFromRow","filter","elem","task","renderRows","containers_Row_Row","minute","dataForApi","list_hour","forEach","sendData","_callee","response_code","regenerator_default","wrap","_context","prev","next","fetch","method","headers","content-type","JSON","stringify","sent","status","json","t0","stop","componentDidMount","_callee2","_context2","getDataApi","reFormat","_rows","uniqid","_callee3","_context3","abrupt","handleCloseModal","Body","Application","App_templateObject","App","components_Header_Header","Main_Content","Boolean","window","location","hostname","match","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ff66d3c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MND.cz.a8509754.svg\";","import styled from 'styled-components';\r\n\r\nconst BlockUp = styled.header`\r\n    width: 100%;\r\n    height: 70px;\r\n    min-height: 80px;\r\n    position: relative;\r\n    background-color: #000;\r\n    opacity: 0.7;\r\n    transition: opacity .2s ease-in-out;\r\n    &:hover{\r\n        opacity: 0.8;\r\n    }\r\n`\r\n\r\nconst BlockImg = styled.div`\r\n    position: absolute;\r\n    left: 7%;\r\n    min-width: 100px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n`\r\n\r\nconst Logo = styled.img.attrs({alt: 'logo_mnd'})`\r\n    animation: showLogo 1.4s;\r\n    transform: scale(.8);\r\n    @keyframes showLogo{\r\n        from{\r\n            transform: scale(0.5) rotate(0);\r\n        } to{\r\n            transform: scale(.8) rotate(360deg);\r\n        }\r\n    } \r\n`\r\n\r\nconst BlockTitle = styled.div`\r\n    width: auto;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    @media (max-width: 768px){\r\n        transform: translate(-35%, -50%)\r\n    }\r\n`\r\n\r\nconst Title = styled.h1`\r\n    color: #fff;\r\n    text-align: center;\r\n    font-weight: 400;\r\n    animation: showTitle .7s;\r\n\r\n    @keyframes showTitle{\r\n        from {\r\n            transform: scale(0.5);\r\n            opacity: 0.4;\r\n        } to {\r\n            transform: scale(1);\r\n            opacity: 1;\r\n        }\r\n    }\r\n`\r\n\r\nexport {\r\n    Title, \r\n    BlockTitle,\r\n    Logo,\r\n    BlockImg,\r\n    BlockUp\r\n}","import React from 'react';\r\nimport logo from '../../assets/MND.cz.svg';\r\n\r\nimport {\r\n    Title, \r\n    BlockTitle,\r\n    Logo,\r\n    BlockImg,\r\n    BlockUp\r\n} from '../StyledComponents/_Header';\r\n\r\nconst Header = () => (\r\n    <BlockUp>\r\n        <BlockImg>\r\n            <Logo src={logo}/>\r\n        </BlockImg>\r\n        <BlockTitle>\r\n            <Title>RegEn App</Title>\r\n        </BlockTitle>\r\n    </BlockUp>\r\n)\r\n\r\nexport default Header;","export const rows = [\r\n    {id: 0, hour: '00:00 - 01:00', disabled: false, tasks: []},\r\n    {id: 1, hour: '01:00 - 02:00', disabled: false, tasks: []},\r\n    {id: 2, hour: '02:00 - 03:00', disabled: false, tasks: []}, \r\n    {id: 3, hour: '03:00 - 04:00', disabled: false, tasks: []},\r\n    {id: 4, hour: '04:00 - 05:00', disabled: false, tasks: []},\r\n    {id: 5, hour: '05:00 - 06:00', disabled: false, tasks: []},\r\n    {id: 6, hour: '06:00 - 07:00', disabled: false, tasks: []},\r\n    {id: 7, hour: '07:00 - 08:00', disabled: false, tasks: []},\r\n    {id: 8, hour: '08:00 - 09:00', disabled: false, tasks: []},\r\n    {id: 9, hour: '09:00 - 10:00', disabled: false, tasks: []},\r\n    {id: 10, hour: '10:00 - 11:00', disabled: false, tasks: []},\r\n    {id: 11, hour: '11:00 - 12:00', disabled: false, tasks: []},\r\n    {id: 12, hour: '12:00 - 13:00', disabled: false, tasks: []},\r\n    {id: 13, hour: '13:00 - 14:00', disabled: false, tasks: []},\r\n    {id: 14, hour: '14:00 - 15:00', disabled: false, tasks: []},\r\n    {id: 15, hour: '15:00 - 16:00', disabled: false, tasks: []},\r\n    {id: 16, hour: '16:00 - 17:00', disabled: false, tasks: []},\r\n    {id: 17, hour: '17:00 - 18:00', disabled: false, tasks: []},\r\n    {id: 18, hour: '18:00 - 19:00', disabled: false, tasks: []},\r\n    {id: 19, hour: '19:00 - 20:00', disabled: false, tasks: []},\r\n    {id: 20, hour: '20:00 - 21:00', disabled: false, tasks: []},\r\n    {id: 21, hour: '21:00 - 22:00', disabled: false, tasks: []},\r\n    {id: 22, hour: '22:00 - 23:00', disabled: false, tasks: []},\r\n    {id: 23, hour: '23:00 - 00:00', disabled: false, tasks: []},\r\n]","export const findByHour = (rows = [], hour) => rows.find(item => item.id === hour);  \r\n\r\nexport const uniq = (arr = []) => arr.filter((item, index, self) => index === self.findIndex(t => t.hour === item.hour));\r\n\r\nexport const toNumHour = hour => Number(hour.slice(0,2))","import styled from 'styled-components';\r\n\r\nconst DialogWrapper = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    min-height: 100vh;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: rgba(0,0,0,.6);\r\n    z-index: 100;\r\n`\r\n\r\nconst BtnClose = styled.button`\r\n    padding: 6px 22px;\r\n    position: absolute;\r\n    right: 18px;\r\n    bottom: 8px;\r\n    font-size: 16px;\r\n    border-radius: 5px;\r\n    background: #868eb7;\r\n    color: white;\r\n`\r\n\r\nconst DialogBlock = styled.div`\r\n    width: 30%;\r\n    min-height: 15%;\r\n    background-color: #3f51b5;\r\n    padding: 30px;\r\n    border-radius: 5px;\r\n    color: white;\r\n    font-size: 20px;\r\n    animation: showResponse .4s;\r\n    opacity: 0.95;\r\n    position: relative;\r\n    @keyframes showResponse{\r\n        from {\r\n            opacity: 0;\r\n            transform: translateX(100%);\r\n        } to {\r\n            opacity: 0.9;\r\n            transform: translateX(0);\r\n        }\r\n    }\r\n`\r\n\r\nexport { DialogBlock, DialogWrapper, BtnClose }","import React from 'react';\r\nimport { DialogBlock, DialogWrapper, BtnClose } from '../StyledComponents/_Dialog';\r\n\r\nexport default ({ response: { response_text }, handleDialog }) => (\r\n    <DialogWrapper>\r\n        <DialogBlock>\r\n            <p style={{ color: '#00923f', fontWeight: 'bold' }}>GOOD JOB</p>\r\n            <p style={{ color: '#0039a6', fontWeight: 'bold' }}>DATA SUCCESSFULLY WRITTEN</p>\r\n            <p style={{ color: '#d81e05', fontWeight: 'bold' }}>{response_text}</p>\r\n            <BtnClose onClick={handleDialog}>Close</BtnClose>\r\n        </DialogBlock>\r\n    </DialogWrapper>\r\n)","import styled from 'styled-components';\r\n\r\nconst HelperTask = styled.div`\r\n    position: absolute;\r\n    top: 36px;\r\n    border-radius: 5px;\r\n    left: 0;\r\n    padding: 10px;\r\n    width: 195px;\r\n    height: auto;\r\n    background: linear-gradient(#9198e5, #007bff);\r\n    opacity: 0.98;\r\n    transition: all .5s;\r\n    z-index: 1;\r\n    animation: showHelper .4s;\r\n    font-size: 15px;\r\n    font-weight: bold;\r\n    @keyframes showHelper {\r\n        from {\r\n            opacity: 0;\r\n            transform: scale(0.3);\r\n        } to {\r\n            opacity: 0.98;\r\n            transform: scale(1);\r\n        }\r\n    }\r\n`\r\n\r\nconst Col6 = styled.div`\r\n    margin: 10px 5px;\r\n`\r\n\r\nconst TextVal = styled.span`\r\n    color: red;\r\n    font-weight: bold;\r\n    margin-left: 6px;\r\n    font-size: 18px;\r\n`\r\n\r\nexport {\r\n    HelperTask,\r\n    Col6,\r\n    TextVal\r\n}","import React, { Fragment } from 'react';\r\n\r\nimport {\r\n    HelperTask,\r\n    Col6,\r\n    TextVal\r\n} from '../StyledComponents/_InfoTask';\r\n\r\nexport default ({ show_info: { TYPE, MINUTE, QUANTITY, VALIDITY, PEAK_PRICE_DELTA, DISPLAY_QUANTITY} }) => {\r\n    return (\r\n        <HelperTask>\r\n            <Col6>TYPE:  <TextVal>{TYPE}</TextVal></Col6>\r\n            <Col6>MINUTE:  <TextVal>{MINUTE}</TextVal></Col6>\r\n            <Col6>QUANTITY:  <TextVal>{QUANTITY}</TextVal></Col6>\r\n            <Col6>VALIDITY:  <TextVal>{VALIDITY}</TextVal></Col6>\r\n            {TYPE === 'ICEBERG_ORDER' ?\r\n                <Fragment>\r\n                    <Col6>DISPLAY_QUANTITY:  <TextVal>{DISPLAY_QUANTITY}</TextVal></Col6>\r\n                    <Col6>PEAK_PRICE_DELTA:  <TextVal>{PEAK_PRICE_DELTA}</TextVal></Col6>\r\n                </Fragment>\r\n                :null\r\n            }\r\n        </HelperTask>\r\n    )\r\n}","export const input_data = [\r\n    {\r\n        type: 'range',\r\n        value: 'MINUTE',\r\n        max_value: 59,\r\n        min_value: 0,\r\n        step: 1,\r\n        name: 'Choose minute:',\r\n    },\r\n    {\r\n        type: 'range',\r\n        value: 'QUANTITY',\r\n        max_value: 15,\r\n        min_value: 1,\r\n        step: 1,\r\n        name: 'Quantity [MW]:',\r\n    }, \r\n    {\r\n        type: 'range',\r\n        value: 'VALIDITY',\r\n        max_value: 59,\r\n        min_value: 1,\r\n        step: 1,\r\n        name: 'Validity [minutes]:',\r\n    }, \r\n    {\r\n        type: 'range',\r\n        value: 'DISPLAY_QUANTITY',\r\n        max_value: 15,\r\n        min_value: 1,\r\n        step: 1,\r\n        name: 'Display quantity:',\r\n    },\r\n    {\r\n        type: 'range',\r\n        value: 'PEAK_PRICE_DELTA',\r\n        max_value: 25,\r\n        min_value: -25,\r\n        step: 1,\r\n        name: 'Peak price delta:',\r\n    }\r\n]\r\n\r\nexport const input_data_ice = [\r\n    {\r\n        type: 'range',\r\n        value: 'MINUTE',\r\n        max_value: 59,\r\n        min_value: 0,\r\n        step: 1,\r\n        name: 'Choose minute:',\r\n    },\r\n    {\r\n        type: 'range',\r\n        value: 'QUANTITY',\r\n        max_value: 15,\r\n        min_value: 1,\r\n        step: 1,\r\n        name: 'Quantity [MW]:',\r\n    }, \r\n    {\r\n        type: 'range',\r\n        value: 'VALIDITY',\r\n        max_value: 59,\r\n        min_value: 1,\r\n        step: 1,\r\n        name: 'Validity [minutes]:',\r\n    }, \r\n]","import styled from 'styled-components';\r\n\r\nconst BottomSave = styled.button`\r\n    background-color: #007bff;  \r\n    border: none;\r\n    height: 80%;\r\n    color: white;\r\n    font-size: 18px;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    margin: 0 7% 0 15px;  \r\n    min-width: 150px;\r\n    transition: all .2s;\r\n    &:hover{\r\n        background-color: #0069d9;\r\n    }\r\n    @media(max-width: 768px){\r\n        margin: 0 0 0 10px;\r\n    }\r\n`\r\n\r\nconst BottomClose = styled.button`\r\n    background-color: #5a6268;  \r\n    border: none;\r\n    height: 80%;\r\n    color: white;\r\n    font-size: 18px;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    min-width: 100px;\r\n    transition: all .2s;\r\n    &:hover{\r\n        background-color: #3b3737;\r\n    }\r\n    @media(max-width: 768px){\r\n        margin-right: 10px;\r\n    }\r\n`\r\n\r\nconst BlockBottom = styled.div`\r\n    width: 100%;\r\n    height: 60px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-top: 30px;\r\n    @media(max-width: 768px){\r\n        justify-content: center;\r\n    }\r\n`\r\n\r\nconst DisplayVal = styled.span`\r\n    display: inline-block;\r\n    position: relative;\r\n    text-align: center;\r\n    width: 40px;\r\n    color: #fff;\r\n    line-height: 20px;\r\n    border-radius: 3px;\r\n    background: #2c3e50;\r\n    padding: 5px 10px;\r\n    margin-left: 4%;\r\n\r\n    @media(max-width: 768px){\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        width: 34px;\r\n        font-size: 14px;\r\n        height: 15px;\r\n        margin: 5px 0 0 34%;\r\n    }\r\n\r\n    &:after {\r\n        position: absolute;\r\n        top: 8px;\r\n        left: -7px;\r\n        width: 0;\r\n        height: 0;\r\n        border-top: 7px solid transparent;\r\n        border-right: 7px solid #2c3e50;\r\n        border-bottom: 7px solid transparent;\r\n        content: '';\r\n\r\n        @media(max-width: 768px){\r\n            top: -13px;\r\n            left: 21px;\r\n            border-bottom: 7px solid #2c3e50;\r\n            border-left: 7px solid transparent;\r\n            border-right: 7px solid transparent;\r\n        }\r\n    }\r\n`\r\n\r\nconst Input = styled.input`\r\n    -webkit-appearance: none;\r\n    width: 75%;\r\n    height: 10px;\r\n    border-radius: 5px;\r\n    background: #d7dcdf;\r\n    outline: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    @media(max-width: 768px){\r\n        width: 100%;\r\n        margin-top: 20px;\r\n    }    \r\n\r\n    &::-webkit-slider-thumb {\r\n    appearance: none;\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 50%;\r\n    background: #2c3e50;\r\n    cursor: pointer;\r\n    transition: background .15s ease-in-out;\r\n        &:hover {\r\n        background: #1abc9c;\r\n        }\r\n    }\r\n\r\n    &:active::-webkit-slider-thumb {\r\n        background: #1abc9c;\r\n    }\r\n\r\n    &::-moz-range-thumb {\r\n        width: 20px;\r\n        height: 20px;\r\n        border: 0;\r\n        border-radius: 50%;\r\n        background: #2c3e50;\r\n        cursor: pointer;\r\n        transition: background .15s ease-in-out;\r\n\r\n        &:hover {\r\n        background: #1abc9c;\r\n        }\r\n    }\r\n\r\n    &:active::-moz-range-thumb {\r\n        background: #1abc9c;\r\n    }\r\n\r\n    &:focus {\r\n        \r\n        &::-webkit-slider-thumb {\r\n        box-shadow: 0 0 0 3px #fff,\r\n                    0 0 0 6px #1abc9c;\r\n        }\r\n  }\r\n`\r\n\r\nconst Col6 = styled.div`\r\n    width: 50%;\r\n    padding: 0 40px;\r\n    @media(max-width:768px){\r\n        padding: 0 10px;\r\n    }\r\n`\r\n\r\nconst RowModal = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    color: black;\r\n    height: 50px;\r\n    margin: 20px 0;\r\n    font-size: 18px;\r\n    font-weight: 700;\r\n    align-items: center;\r\n    opacity: 1;\r\n    animation: showRowModal .3s;\r\n    @keyframes showRowModal {\r\n        from {\r\n            opacity: 0;\r\n            transform: scale(0)\r\n        } to {\r\n            opacity: 1;\r\n            transform: scale(1)\r\n        }\r\n    }\r\n`\r\n\r\nconst ModalData = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    max-height: 83%;\r\n    min-height: 430px;\r\n`\r\n\r\nconst ModalTitle = styled.span`\r\n    font-size: 25px;\r\n    font-weight: bold;\r\n    color: black;\r\n    margin-left: 4%;\r\n`\r\n\r\nconst OnCloseModal = styled.button`\r\n    padding: 10px 15px;\r\n    font-size: 22px;\r\n    border: none;\r\n    color: white;\r\n    background-color: #007bff;\r\n    margin-right: 4%;\r\n    border-radius: 50%;\r\n    transition: all .2s;\r\n    &:hover{\r\n        background-color: #0069d9;\r\n    }\r\n`\r\n\r\nconst HeaderModal = styled.div`\r\n    width: 100%;\r\n    height: 8%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 4% 0 2% 0;\r\n    align-items: center;\r\n`\r\n\r\nconst OverlayModal = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    width: 100%;\r\n    min-height: 100vh;\r\n    height: 100%;\r\n    display: ${props => props.isOpen ? 'flex' : 'none'};\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: white;\r\n    background-color: rgba(0,0,0, .6);\r\n    z-index: 100;\r\n`\r\n\r\nconst BodyModal = styled.div`\r\n    position: absolute;\r\n    transform: scale(1);\r\n    width: 65%;\r\n    height: auto;\r\n    padding: 20px;\r\n    overflow: auto;\r\n    background: white;\r\n    border-radius: 5px;\r\n    animation: showModal .4s;\r\n    @keyframes showModal{\r\n        from{\r\n            opacity: 0;\r\n            transform: scale(0);\r\n        }   \r\n        to{ \r\n            opacity: 1;\r\n            transform: scale(1);\r\n        }\r\n    }\r\n    @keyframes hideModal{\r\n        from{\r\n            opacity: 1;\r\n            transform: scale(1);\r\n        }   \r\n        to{ \r\n            opacity: 0;\r\n            transform: scale(0);\r\n        }\r\n    }\r\n\r\n    @media(max-width: 768px){\r\n        width: 95%;\r\n        height: 95vh;\r\n    }\r\n`\r\n\r\nexport { \r\n    BodyModal, \r\n    OverlayModal, \r\n    HeaderModal, \r\n    OnCloseModal, \r\n    ModalTitle, \r\n    ModalData, \r\n    RowModal, \r\n    Col6,\r\n    Input, \r\n    BlockBottom, \r\n    BottomClose, \r\n    BottomSave, \r\n    DisplayVal\r\n}","export const options = [{\r\n        value: 'STANDARD_ORDER',\r\n        label: 'STANDARD_ORDER'\r\n    },\r\n    {\r\n        value: 'ICEBERG_ORDER',\r\n        label: 'ICEBERG_ORDER'\r\n    },\r\n    {\r\n        value: 'SPECIAL_ORDER',\r\n        label: 'SPECIAL_ORDER'\r\n    }\r\n];","import React, { Component, Fragment } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport uniq_id from 'uniqid';\r\n\r\nimport Select from 'react-select';\r\n\r\nimport { input_data, input_data_ice } from '../../data/input_data_modal';\r\n\r\nimport { toNumHour } from '../../helpers/helpers';\r\n\r\nimport { \r\n    BodyModal, \r\n    OverlayModal, \r\n    HeaderModal, \r\n    OnCloseModal, \r\n    ModalTitle, \r\n    ModalData, \r\n    RowModal, \r\n    Col6,\r\n    Input, \r\n    BlockBottom, \r\n    BottomClose, \r\n    BottomSave,\r\n    DisplayVal \r\n} from '../../components/StyledComponents/_Modal';\r\n\r\nimport { options } from '../../data/options_data';\r\n\r\nclass Modal extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.root = document.createElement('div');\r\n        document.body.appendChild(this.root);\r\n        this.state = {\r\n            data: {\r\n                ID: uniq_id(),\r\n                HOUR: props.hour,\r\n                MINUTE: 0,\r\n                TYPE: options[0].value,\r\n                QUANTITY: 1,\r\n                VALIDITY: 1,\r\n                DISPLAY_QUANTITY: 1, \r\n                PEAK_PRICE_DELTA: -25\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        document.body.removeChild(this.root);\r\n    }\r\n\r\n    handleInput = ({ target }, key ) => {\r\n        const values = {...this.state.data};\r\n        values[key] = Number(target.value);\r\n        this.setState({ data: values })\r\n    }\r\n\r\n    saveData = () => {\r\n        const { closeModal, addTaskToRow } = this.props;\r\n        const { data } = this.state;\r\n        data.HOUR = toNumHour(data.HOUR);\r\n        if(data.TYPE !== 'ICEBERG_ORDER') {\r\n            delete data.PEAK_PRICE_DELTA;\r\n            delete data.DISPLAY_QUANTITY;\r\n        }\r\n        console.log(data);\r\n        addTaskToRow(data);\r\n        closeModal();\r\n    }\r\n\r\n    handleOption = (option = {}) => {\r\n        const data = {...this.state.data}\r\n        data.TYPE = option.value;\r\n        this.setState({ data })\r\n    }\r\n\r\n    renderInputRows = data => {\r\n        return data.map(({ type, min_value, name, value, step, max_value }, index) => (\r\n            <RowModal key={index}>\r\n                <Col6>{name}</Col6>\r\n                <Col6>\r\n                    {value === 'DISPLAY_QUANTITY' ? \r\n                    <Fragment>\r\n                        <Input \r\n                            type={type}\r\n                            min={min_value}\r\n                            max={this.state.data.QUANTITY}\r\n                            step={step}\r\n                            onChange={(e) => this.handleInput(e, `${value}`)}/>\r\n                            <DisplayVal>\r\n                                {this.state.data[value]}\r\n                            </DisplayVal>\r\n                    </Fragment>\r\n                    : \r\n                    <Fragment>\r\n                        <Input\r\n                            type={type}\r\n                            min={min_value}\r\n                            max={max_value}\r\n                            value={this.state.data[value]}\r\n                            step={step}\r\n                            onChange={(e) => this.handleInput(e, `${value}`)}/>\r\n                            <DisplayVal>\r\n                                {this.state.data[value]}\r\n                            </DisplayVal>\r\n                    </Fragment>\r\n                    }\r\n                </Col6>\r\n            </RowModal>\r\n        ))\r\n    }\r\n\r\n    render(){\r\n        const { closeModal, isOpen, hour } = this.props;\r\n        const { data: { TYPE } } = this.state;\r\n        return ReactDOM.createPortal(\r\n            <OverlayModal isOpen={isOpen}>\r\n                <BodyModal isOpen={isOpen}>\r\n                    <HeaderModal>\r\n                        <ModalTitle>Task for: {hour}</ModalTitle>\r\n                        <OnCloseModal\r\n                            onClick={() => closeModal()}>&#10006;\r\n                        </OnCloseModal>\r\n                    </HeaderModal>\r\n                    <hr style={{ width: '93%', backgroundColor: 'black' }}></hr>\r\n                    <ModalData>\r\n                        <RowModal>\r\n                            <Col6>Deal type:</Col6>\r\n                            <Col6>\r\n                                <Select \r\n                                    autoFocus\r\n                                    options={options}\r\n                                    onChange={this.handleOption}\r\n                                    value={this.state.data.TYPE}\r\n                                    isSearchable={true}\r\n                                    placeholder={this.state.data.TYPE}\r\n                                />\r\n                            </Col6>\r\n                        </RowModal>\r\n                        {TYPE === 'ICEBERG_ORDER' ? this.renderInputRows(input_data) : this.renderInputRows(input_data_ice)}\r\n                    </ModalData>\r\n                    <BlockBottom>\r\n                        <BottomClose\r\n                            onClick={() => closeModal()}>Close\r\n                            </BottomClose>\r\n                        <BottomSave\r\n                            onClick={() => {this.saveData(hour)}}>Save Task\r\n                        </BottomSave>\r\n                    </BlockBottom>\r\n                </BodyModal>\r\n            </OverlayModal>,\r\n            this.root\r\n        )\r\n    }\r\n}\r\n\r\nModal.propTypes = {\r\n    addTaskToRow: PropTypes.func.isRequired,\r\n    closeModal: PropTypes.func.isRequired,\r\n    hour: PropTypes.string.isRequired,\r\n    isOpen: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default Modal;","import styled from 'styled-components';\r\n\r\nconst BtnAdd = styled.button`\r\n    padding: 0.40rem .7rem;\r\n    color: white;\r\n    font-size: 18px;\r\n    background-color: ${props => props.disabled ? 'rgba(89,94,101,0.2)' : '#007bff'};\r\n    border: none;\r\n    border-radius: 5px;\r\n    transition: .15s ease-in-out;\r\n    box-shadow: 0 2px 2px 0 rgba(116, 96, 238, 0.14), \r\n                0 3px 1px -2px rgba(116, 96, 238, 0.2), \r\n                0 1px 5px 0 rgba(116, 96, 238, 0.12);\r\n    &:hover{\r\n        background-color: ${props => props.disabled ? '#8c8989' : '#0069d9'};\r\n    }\r\n`\r\n\r\nconst BlockButton = styled.div`\r\n    height: 100%;\r\n    width: 100px;\r\n    margin: 0 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    @media(max-width:768px){\r\n        display: block;\r\n        position: absolute;\r\n        right: 10px;\r\n        bottom: 5px;\r\n        height: 35%;\r\n        margin: 0;\r\n        width: 20%;\r\n    }\r\n`\r\n\r\nconst BtnDelTask = styled.span`\r\n    position: absolute;\r\n    padding: 0;\r\n    right: 3px;\r\n    top: 1px;\r\n    background-color: inherit;\r\n    border: none;\r\n    color: whitesmoke;\r\n    font-size: 10px;\r\n    cursor: pointer;\r\n    &:hover{\r\n        color: red;\r\n    }\r\n    @media(max-width: 768px){\r\n        font-size: 10px;\r\n    }\r\n`\r\n\r\nconst WrapTask = styled.div`\r\n    width: 5%;\r\n    margin: 0 5px;\r\n    position: relative;\r\n    height: 25px;\r\n`\r\n\r\nconst Task = styled.div`\r\n    text-align: center;\r\n    height: 100%;\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: #4150bd;\r\n    border-radius: 3px;\r\n    color: whitesmoke;\r\n    font-size: 12px;\r\n    font-weight: 700;\r\n    transition: all .2s ease-in-out;\r\n    opacity: 1;\r\n    transform: scale(1);\r\n    max-width: 65px;\r\n    animation: showTask .4s;\r\n    z-index: 1;\r\n    cursor: pointer;\r\n    &:hover{\r\n        background-color: #5767dc;\r\n    }\r\n    @keyframes showTask{\r\n        0% {\r\n            opacity: 0;\r\n            transform: scale(0);\r\n        }\r\n        100%{\r\n            opacity: 1;\r\n            transform: scale(1);\r\n        }\r\n    }\r\n    @media(max-width: 768px){\r\n        width: 18%;\r\n    }\r\n`\r\n\r\nconst BlockTasks = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    height: 60%;\r\n    min-height: 30px;\r\n    min-width: 300px;\r\n    width: 85%;\r\n    background: ${props => props.active ? 'rgba(89,94,101,0.2)' : 'white'};\r\n    border-radius: 5px;\r\n    margin: 0 30px;\r\n    transition: all .2s ease-in-out;\r\n    border: 1px solid #ccc;\r\n    @media(max-width: 768px){\r\n        margin: 40px 10px 0 10px;\r\n    }\r\n`\r\n\r\nconst Label = styled.label`\r\n    width:75px;\r\n    height:25px;\r\n    background-color:#4150bd;\r\n    border-radius:50px;\r\n    padding:5px;\r\n    transition:0.5s ease;\r\n    position: relative;\r\n    cursor:pointer;\r\n    &::before{\r\n        content:'';\r\n        width:25px;\r\n        height:25px;\r\n        background:#fff;\r\n        position:absolute;\r\n        border-radius:50%;\r\n        box-shadow:0 5px 5px rgba(0,0,0,.7);\r\n        transition:0.4s;\r\n        left:5px;\r\n        transition-timing-function: cubic-bezier(0.42,0,0.58,1);\r\n    }\r\n`\r\n\r\nconst Input = styled.input`\r\n    opacity: 0;\r\n    &:checked + ${Label}{\r\n        background-color: rgba(89,94,101,0.2);\r\n    }\r\n    &:checked + ${Label}:before{\r\n        left: 55px;\r\n    }\r\n`\r\n\r\nconst BlockCheck = styled.div`\r\n    width: 5.2%;\r\n    min-width: 115px;\r\n    display: flex;\r\n    margin: 0 30px;\r\n    align-items: center;\r\n    @media(max-width: 768px){\r\n        position: absolute;\r\n        bottom: 20px;\r\n        margin: 0;\r\n        left: -7px;\r\n    }\r\n`\r\n\r\nconst BlockHour = styled.div`\r\n    height: 100%;\r\n    width: 4.8%;\r\n    min-width: 115px;\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0 30px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    @media(max-width: 768px){\r\n        position: absolute;\r\n        top: 10px;\r\n        height: 15%;\r\n        margin: 0 14px;\r\n    }\r\n`\r\n\r\nconst BlockRow = styled.div`\r\n    width: 100%;\r\n    background: #e9eaec;\r\n    display: flex;\r\n    align-items: center;\r\n    min-height: 50px;\r\n    height: auto;\r\n    margin-top: 10px; \r\n    border-radius: 2px;\r\n    box-shadow: 0 10px 30px -12px rgba(0, 0, 0, 0.42), \r\n                0 4px 25px 5px rgba(0, 0, 0, 0.12),\r\n                0 8px 10px -5px rgba(0, 0, 0, 0.2);\r\n    @media(max-width: 768px){\r\n        min-height: 150px;\r\n        display: block;\r\n        position: relative;\r\n    }\r\n`\r\n\r\nexport {\r\n    BlockRow,\r\n    BlockButton,\r\n    BlockCheck,\r\n    BlockHour,\r\n    BlockTasks,\r\n    Input,\r\n    Task, \r\n    BtnDelTask,\r\n    BtnAdd,\r\n    Label,\r\n    WrapTask\r\n}","import React, { Component } from 'react';\r\n\r\nimport Helper from '../../components/Helper/InfoTask';\r\nimport Modal from '../Modal/Modal';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { toNumHour } from '../../helpers/helpers';\r\n\r\nimport {\r\n    BlockRow,\r\n    BlockButton,\r\n    BlockCheck,\r\n    BlockHour,\r\n    BlockTasks,\r\n    Input,\r\n    Task, \r\n    BtnDelTask,\r\n    BtnAdd,\r\n    Label,\r\n    WrapTask\r\n} from '../../components/StyledComponents/_Row';\r\n\r\nclass Row extends Component{\r\n    state = {\r\n        isOpenModal: false,\r\n        taskHelperId: null\r\n    }\r\n\r\n    toggleModalView = () => {\r\n        this.setState({ isOpenModal: !this.state.isOpenModal })\r\n    }\r\n\r\n    showHelper(index){\r\n        this.setState({ taskHelperId: index })\r\n    }\r\n\r\n    hideHelper(){\r\n        this.setState({ taskHelperId: null })\r\n    }\r\n\r\n    renderTasks = (tasks = []) => {\r\n        const { delTask, hour, showInfo } = this.props;   \r\n        return tasks.map(({ MINUTE, ID }, index) => (\r\n            <WrapTask key={index}>\r\n                <Task\r\n                    onMouseEnter={() => this.showHelper(index)}\r\n                    onMouseLeave={() => this.hideHelper()}>\r\n                    {MINUTE} min\r\n                    <BtnDelTask\r\n                        onClick={() => delTask(toNumHour(hour), ID)}>\r\n                        &#10006;\r\n                    </BtnDelTask>\r\n                </Task>\r\n                {this.state.taskHelperId === index \r\n                    && \r\n                    <Helper \r\n                        show_info={showInfo(toNumHour(hour), ID)} />}\r\n            </WrapTask>\r\n        ))\r\n    }\r\n\r\n    renderModal = () => {\r\n        const { hour, addTaskToRow } = this.props;\r\n\r\n        return this.state.isOpenModal &&\r\n            <Modal \r\n                addTaskToRow={(data) => addTaskToRow(data)}\r\n                hour={hour} \r\n                isOpen={this.state.isOpenModal} \r\n                closeModal={this.toggleModalView}>\r\n            </Modal>\r\n    }\r\n\r\n    render(){\r\n        const { \r\n            hour, \r\n            tasks, \r\n            active, \r\n            checkActive,\r\n            } = this.props;\r\n        return (\r\n            <BlockRow>\r\n                <BlockHour>\r\n                    {hour}\r\n                </BlockHour>\r\n                <BlockCheck>\r\n                    <Input \r\n                        checked={active} \r\n                        onChange={() => checkActive(toNumHour(hour), active)} \r\n                        type='checkbox' \r\n                        id={`check_row_${hour}`}/>\r\n                    <Label \r\n                        htmlFor={`check_row_${hour}`}/>\r\n                </BlockCheck>\r\n                <BlockTasks \r\n                    active={active}>\r\n                    {this.renderTasks(tasks)}\r\n                </BlockTasks>\r\n                <BlockButton>\r\n                    <BtnAdd\r\n                        disabled={active}\r\n                        onClick={this.toggleModalView}>Add\r\n                    </BtnAdd>\r\n                </BlockButton>\r\n                {this.renderModal()}\r\n            </BlockRow>\r\n        )\r\n    }\r\n}\r\n\r\nRow.propTypes = {\r\n    active: PropTypes.bool.isRequired,\r\n    addTaskToRow: PropTypes.func.isRequired,\r\n    checkActive: PropTypes.func.isRequired,\r\n    delTask: PropTypes.func.isRequired,\r\n    hour: PropTypes.string.isRequired,\r\n    showInfo: PropTypes.func.isRequired,\r\n    tasks: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            TYPE: PropTypes.string.isRequired,\r\n            MINUTE: PropTypes.number.isRequired,\r\n            QUANTITY: PropTypes.number.isRequired,\r\n            VALIDITY: PropTypes.number.isRequired,\r\n        })\r\n    )\r\n}\r\n\r\nexport default Row;","import styled from 'styled-components';\r\n\r\nconst InsideBlock = styled.div`\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    height: auto;\r\n    min-height: 600px;\r\n    width: auto;\r\n    margin: 10px;\r\n    border-radius: 5px;\r\n    padding: 15px;\r\n    box-shadow: 0 0 4px 1px rgba(0, 0, 0, 0.3);\r\n    transition: all .5s ease-in-out;\r\n    &:hover{\r\n        background-color: #f9f9f9;\r\n    }\r\n`\r\n\r\nconst BlockWrapper = styled.div`\r\n    width: 100%;\r\n    min-height: 100vh;\r\n    height: 100%;\r\n    position: relative;\r\n    box-shadow: 0 10px 30px -12px rgba(0, 0, 0, 0.42), \r\n                0 4px 25px 5px rgba(0, 0, 0, 0.12),\r\n                0 8px 10px -5px rgba(0, 0, 0, 0.2);\r\n`\r\n\r\nconst BlockTitle = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;   \r\n    padding: 20px 0;\r\n    height: auto; \r\n`\r\n\r\nconst Title = styled.h1`\r\n    @keyframes fadeInRight{\r\n        0%{\r\n            transform: translateX(100%);\r\n            opacity: 0.5\r\n        }\r\n        50%{\r\n            transform: translateX(-10%);\r\n            opacity: 0.7\r\n        }\r\n        100%{\r\n            transform: translateX(0%);\r\n            opacity: 1\r\n        }\r\n    }\r\n    animation: 1s ease-in-out fadeInRight;\r\n    font-size: 60px;\r\n    margin: 0;\r\n    padding: 0;\r\n    @media(max-width: 768px){\r\n        font-size: 24px;\r\n    }\r\n`\r\n\r\nconst WrapBtn = styled.div`\r\n    width: 100%;\r\n    position: relative;\r\n    height: 70px;\r\n`\r\n\r\nconst Submit = styled.button.attrs({\r\n    type: 'submit',\r\n    value: 'Submit'\r\n})`\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 50%;\r\n    transform: translateX(-50%);\r\n    width: 60px;\r\n    height: 35px;\r\n    border-radius: 5px;\r\n    color: white;\r\n    font-size: 14px;\r\n    background: #0069d9;\r\n`\r\n\r\nconst Label = styled.label`\r\n\r\n`\r\n\r\nconst UploadFile = styled.input.attrs({\r\n    type: 'file',\r\n    name: 'upload'\r\n})`\r\n    cursor: pointer;\r\n    width: 180px;\r\n    height: 34px;\r\n    overflow: hidden;\r\n    &::before{\r\n        width: 158px;\r\n        height: 32px;\r\n        font-size: 16px;\r\n        line-height: 32px;\r\n        content: 'Select your file';\r\n        display: inline-block;\r\n        background: white;\r\n        border: 1px solid #000;\r\n        padding: 0 10px;\r\n        text-align: center;\r\n        font-family: Helvetica, Arial, sans-serif; \r\n    }\r\n    &::-webkit-file-upload-button{\r\n        visibility: hidden;\r\n    }\r\n`\r\n\r\nexport {\r\n    Title,\r\n    BlockTitle,\r\n    BlockWrapper,\r\n    InsideBlock,\r\n    Submit,\r\n    UploadFile,\r\n    WrapBtn,\r\n    Label\r\n}","import React from 'react';\r\n\r\nimport {\r\n    BlockWrapper,\r\n    InsideBlock,\r\n} from '../StyledComponents/_Body';\r\n\r\nconst Wrapper = ({ children }) => {\r\n    return(\r\n        <BlockWrapper>\r\n            <InsideBlock>\r\n                { children }\r\n            </InsideBlock>\r\n        </BlockWrapper>\r\n    )\r\n}\r\n\r\nexport default Wrapper;","import React, { Component } from 'react';\r\n\r\nimport { rows } from '../../data/state';\r\nimport uniqid from 'uniqid';\r\nimport { findByHour } from '../../helpers/helpers';\r\nimport Dialog from '../../components/Dialog/Dialog';\r\nimport Row from '../Row/Row';\r\nimport Body from '../../components/Main/Body';\r\nimport { Submit, WrapBtn } from '../../components/StyledComponents/_Body';\r\n\r\nclass Content extends Component{\r\n\r\n    state = {\r\n        rows,\r\n        response: {\r\n            success: false,\r\n            response_text: null\r\n        }\r\n    }\r\n    \r\n    handleCheckRow = (hour, disabled) => {\r\n        const rows = [...this.state.rows];\r\n        const row = findByHour(rows, hour);\r\n        let activeRow = row.disabled = !disabled;\r\n        if(activeRow) row.tasks = [];\r\n        this.setState({ rows });\r\n    }\r\n\r\n    addTaskToRow = (data) => {\r\n        const rows = [...this.state.rows];\r\n        const row = findByHour(rows, data.HOUR);\r\n        row.tasks.push(data);\r\n        console.log(row);\r\n        this.setState({ rows })\r\n    }\r\n\r\n    removeTaskFromRow = (hour, ID) => {\r\n        const rows = [...this.state.rows];\r\n        const row = findByHour(rows, hour);\r\n        row.tasks = row.tasks.filter(elem => elem.ID !== ID);\r\n        this.setState({ rows });\r\n    }\r\n\r\n    showInfo = (hour, id) => {\r\n        const rows = [...this.state.rows];\r\n        const row = findByHour(rows, hour);\r\n        console.log(row);\r\n        const task = row.tasks.find(item => item.ID === id);\r\n        if(task.TYPE !== 'ICEBERG_ORDER'){\r\n            delete task.PEAK_PRICE_DELTA;\r\n            delete task.DISPLAY_QUANTITY;\r\n        }\r\n        return { ...task }\r\n    }\r\n\r\n    renderRows = (rows = []) => {\r\n        return rows.map(({ hour, disabled, tasks }) => (\r\n            <Row \r\n                checkActive={(hour, disabled) => this.handleCheckRow(hour, disabled)}\r\n                key={hour} \r\n                active={disabled}\r\n                tasks={tasks} \r\n                hour={hour}\r\n                addTaskToRow={data => this.addTaskToRow(data)}\r\n                delTask = {(hour, minute) => this.removeTaskFromRow(hour, minute)}\r\n                showInfo = {(hour, minute) => this.showInfo(hour, minute)}\r\n                />\r\n        )); \r\n    }\r\n\r\n    dataForApi = () => {\r\n        const rows = [...this.state.rows];\r\n        const list_hour = [];\r\n        rows.forEach(row => {\r\n            row.tasks.forEach(task => {\r\n                if(task.TYPE !== 'ICEBERG_ORDER'){\r\n                    delete task.PEAK_PRICE_DELTA;\r\n                    delete task.DISPLAY_QUANTITY;\r\n                    delete task.ID;\r\n                }\r\n                list_hour.push(task);\r\n            })\r\n        })\r\n        return list_hour;\r\n    }\r\n\r\n    sendData = async () => {\r\n        try{\r\n            const data = this.dataForApi();\r\n            console.log(data);\r\n            const response = await fetch('/orders_management/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data)\r\n            });\r\n            const response_code = await response.status;\r\n            const response_text = await response.json();\r\n            if (response_code === 400){\r\n                this.setState({ response: { success: false } });\r\n            }\r\n            else if(response_code === 200){\r\n                this.setState({ response: { success: true,  response_text } })\r\n            }\r\n        }\r\n        catch(e){\r\n            console.log(`Error ${e}`)\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        const data = await this.getDataApi();\r\n        const rows = this.reFormat(data);\r\n        this.setState({ rows });\r\n    }\r\n\r\n    reFormat = (data=[]) => {\r\n        const _rows = [...rows];\r\n        data.forEach(item => {\r\n            item.ID = uniqid();\r\n            _rows.forEach(row => {\r\n                if(item.HOUR === row.id){\r\n                    row.tasks.push(item)\r\n                }\r\n            })\r\n        })\r\n        return _rows;\r\n    }\r\n\r\n    getDataApi = async () => {\r\n        try {\r\n            const response = await fetch('/orders_management/')\r\n            const data = await response.json();\r\n            return data;\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    handleCloseModal = () => {\r\n        this.setState({ response: { success: false } })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Body>\r\n                {this.renderRows(this.state.rows)}\r\n                <WrapBtn>\r\n                    <Submit onClick={this.sendData}>Submit</Submit>\r\n                </WrapBtn>\r\n                {this.state.response.success && <Dialog handleDialog={this.handleCloseModal} response={this.state.response}/>}\r\n            </Body>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Content;","import React from 'react';\nimport styled from 'styled-components';\nimport Header from './components/Header/Header';\nimport Content from './containers/Main/Content';\n\nimport './App.css';\n\nconst App = () => (\n    <Application>\n        <Header/>\n        <Content/>\n    </Application>\n)\n\nconst Application = styled.div`\n    width: 100%;\n    height: 100%;\n`;\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}